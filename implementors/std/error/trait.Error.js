(function() {var implementors = {};
implementors["aho_corasick"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"aho_corasick/struct.Error.html\" title=\"struct aho_corasick::Error\">Error</a>","synthetic":false,"types":["aho_corasick::error::Error"]}];
implementors["artichoke"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"artichoke/repl/struct.ParserAllocError.html\" title=\"struct artichoke::repl::ParserAllocError\">ParserAllocError</a>","synthetic":false,"types":["artichoke::repl::ParserAllocError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"artichoke/repl/struct.ParserLineCountError.html\" title=\"struct artichoke::repl::ParserLineCountError\">ParserLineCountError</a>","synthetic":false,"types":["artichoke::repl::ParserLineCountError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"artichoke/repl/struct.ParserInternalError.html\" title=\"struct artichoke::repl::ParserInternalError\">ParserInternalError</a>","synthetic":false,"types":["artichoke::repl::ParserInternalError"]}];
implementors["artichoke_backend"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"artichoke_backend/block/struct.NoBlockGiven.html\" title=\"struct artichoke_backend::block::NoBlockGiven\">NoBlockGiven</a>","synthetic":false,"types":["artichoke_backend::block::NoBlockGiven"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"artichoke_backend/convert/struct.UnboxRubyError.html\" title=\"struct artichoke_backend::convert::UnboxRubyError\">UnboxRubyError</a>","synthetic":false,"types":["artichoke_backend::convert::UnboxRubyError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"artichoke_backend/convert/struct.BoxIntoRubyError.html\" title=\"struct artichoke_backend::convert::BoxIntoRubyError\">BoxIntoRubyError</a>","synthetic":false,"types":["artichoke_backend::convert::BoxIntoRubyError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"artichoke_backend/def/struct.ConstantNameError.html\" title=\"struct artichoke_backend::def::ConstantNameError\">ConstantNameError</a>","synthetic":false,"types":["artichoke_backend::def::ConstantNameError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"artichoke_backend/def/enum.NotDefinedError.html\" title=\"enum artichoke_backend::def::NotDefinedError\">NotDefinedError</a>","synthetic":false,"types":["artichoke_backend::def::NotDefinedError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"artichoke_backend/exception/struct.Exception.html\" title=\"struct artichoke_backend::exception::Exception\">Exception</a>","synthetic":false,"types":["artichoke_backend::exception::Exception"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"artichoke_backend/exception/trait.RubyException.html\" title=\"trait artichoke_backend::exception::RubyException\">RubyException</a>&gt;","synthetic":false,"types":["alloc::boxed::Box"]},{"text":"impl&lt;'_&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for &amp;'_ dyn <a class=\"trait\" href=\"artichoke_backend/exception/trait.RubyException.html\" title=\"trait artichoke_backend::exception::RubyException\">RubyException</a>","synthetic":false,"types":["artichoke_backend::exception::RubyException"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"artichoke_backend/extn/core/env/backend/struct.EnvArgumentError.html\" title=\"struct artichoke_backend::extn::core::env::backend::EnvArgumentError\">EnvArgumentError</a>","synthetic":false,"types":["artichoke_backend::extn::core::env::backend::EnvArgumentError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"artichoke_backend/extn/core/exception/struct.Exception.html\" title=\"struct artichoke_backend::extn::core::exception::Exception\">Exception</a>","synthetic":false,"types":["artichoke_backend::extn::core::exception::Exception"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"artichoke_backend/extn/core/exception/struct.NoMemoryError.html\" title=\"struct artichoke_backend::extn::core::exception::NoMemoryError\">NoMemoryError</a>","synthetic":false,"types":["artichoke_backend::extn::core::exception::NoMemoryError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"artichoke_backend/extn/core/exception/struct.ScriptError.html\" title=\"struct artichoke_backend::extn::core::exception::ScriptError\">ScriptError</a>","synthetic":false,"types":["artichoke_backend::extn::core::exception::ScriptError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"artichoke_backend/extn/core/exception/struct.LoadError.html\" title=\"struct artichoke_backend::extn::core::exception::LoadError\">LoadError</a>","synthetic":false,"types":["artichoke_backend::extn::core::exception::LoadError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"artichoke_backend/extn/core/exception/struct.NotImplementedError.html\" title=\"struct artichoke_backend::extn::core::exception::NotImplementedError\">NotImplementedError</a>","synthetic":false,"types":["artichoke_backend::extn::core::exception::NotImplementedError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"artichoke_backend/extn/core/exception/struct.SyntaxError.html\" title=\"struct artichoke_backend::extn::core::exception::SyntaxError\">SyntaxError</a>","synthetic":false,"types":["artichoke_backend::extn::core::exception::SyntaxError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"artichoke_backend/extn/core/exception/struct.SecurityError.html\" title=\"struct artichoke_backend::extn::core::exception::SecurityError\">SecurityError</a>","synthetic":false,"types":["artichoke_backend::extn::core::exception::SecurityError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"artichoke_backend/extn/core/exception/struct.SignalException.html\" title=\"struct artichoke_backend::extn::core::exception::SignalException\">SignalException</a>","synthetic":false,"types":["artichoke_backend::extn::core::exception::SignalException"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"artichoke_backend/extn/core/exception/struct.Interrupt.html\" title=\"struct artichoke_backend::extn::core::exception::Interrupt\">Interrupt</a>","synthetic":false,"types":["artichoke_backend::extn::core::exception::Interrupt"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"artichoke_backend/extn/core/exception/struct.StandardError.html\" title=\"struct artichoke_backend::extn::core::exception::StandardError\">StandardError</a>","synthetic":false,"types":["artichoke_backend::extn::core::exception::StandardError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"artichoke_backend/extn/core/exception/struct.ArgumentError.html\" title=\"struct artichoke_backend::extn::core::exception::ArgumentError\">ArgumentError</a>","synthetic":false,"types":["artichoke_backend::extn::core::exception::ArgumentError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"artichoke_backend/extn/core/exception/struct.UncaughtThrowError.html\" title=\"struct artichoke_backend::extn::core::exception::UncaughtThrowError\">UncaughtThrowError</a>","synthetic":false,"types":["artichoke_backend::extn::core::exception::UncaughtThrowError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"artichoke_backend/extn/core/exception/struct.EncodingError.html\" title=\"struct artichoke_backend::extn::core::exception::EncodingError\">EncodingError</a>","synthetic":false,"types":["artichoke_backend::extn::core::exception::EncodingError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"artichoke_backend/extn/core/exception/struct.FiberError.html\" title=\"struct artichoke_backend::extn::core::exception::FiberError\">FiberError</a>","synthetic":false,"types":["artichoke_backend::extn::core::exception::FiberError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"artichoke_backend/extn/core/exception/struct.IOError.html\" title=\"struct artichoke_backend::extn::core::exception::IOError\">IOError</a>","synthetic":false,"types":["artichoke_backend::extn::core::exception::IOError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"artichoke_backend/extn/core/exception/struct.EOFError.html\" title=\"struct artichoke_backend::extn::core::exception::EOFError\">EOFError</a>","synthetic":false,"types":["artichoke_backend::extn::core::exception::EOFError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"artichoke_backend/extn/core/exception/struct.IndexError.html\" title=\"struct artichoke_backend::extn::core::exception::IndexError\">IndexError</a>","synthetic":false,"types":["artichoke_backend::extn::core::exception::IndexError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"artichoke_backend/extn/core/exception/struct.KeyError.html\" title=\"struct artichoke_backend::extn::core::exception::KeyError\">KeyError</a>","synthetic":false,"types":["artichoke_backend::extn::core::exception::KeyError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"artichoke_backend/extn/core/exception/struct.StopIteration.html\" title=\"struct artichoke_backend::extn::core::exception::StopIteration\">StopIteration</a>","synthetic":false,"types":["artichoke_backend::extn::core::exception::StopIteration"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"artichoke_backend/extn/core/exception/struct.LocalJumpError.html\" title=\"struct artichoke_backend::extn::core::exception::LocalJumpError\">LocalJumpError</a>","synthetic":false,"types":["artichoke_backend::extn::core::exception::LocalJumpError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"artichoke_backend/extn/core/exception/struct.NameError.html\" title=\"struct artichoke_backend::extn::core::exception::NameError\">NameError</a>","synthetic":false,"types":["artichoke_backend::extn::core::exception::NameError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"artichoke_backend/extn/core/exception/struct.NoMethodError.html\" title=\"struct artichoke_backend::extn::core::exception::NoMethodError\">NoMethodError</a>","synthetic":false,"types":["artichoke_backend::extn::core::exception::NoMethodError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"artichoke_backend/extn/core/exception/struct.RangeError.html\" title=\"struct artichoke_backend::extn::core::exception::RangeError\">RangeError</a>","synthetic":false,"types":["artichoke_backend::extn::core::exception::RangeError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"artichoke_backend/extn/core/exception/struct.FloatDomainError.html\" title=\"struct artichoke_backend::extn::core::exception::FloatDomainError\">FloatDomainError</a>","synthetic":false,"types":["artichoke_backend::extn::core::exception::FloatDomainError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"artichoke_backend/extn/core/exception/struct.RegexpError.html\" title=\"struct artichoke_backend::extn::core::exception::RegexpError\">RegexpError</a>","synthetic":false,"types":["artichoke_backend::extn::core::exception::RegexpError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"artichoke_backend/extn/core/exception/struct.RuntimeError.html\" title=\"struct artichoke_backend::extn::core::exception::RuntimeError\">RuntimeError</a>","synthetic":false,"types":["artichoke_backend::extn::core::exception::RuntimeError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"artichoke_backend/extn/core/exception/struct.FrozenError.html\" title=\"struct artichoke_backend::extn::core::exception::FrozenError\">FrozenError</a>","synthetic":false,"types":["artichoke_backend::extn::core::exception::FrozenError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"artichoke_backend/extn/core/exception/struct.SystemCallError.html\" title=\"struct artichoke_backend::extn::core::exception::SystemCallError\">SystemCallError</a>","synthetic":false,"types":["artichoke_backend::extn::core::exception::SystemCallError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"artichoke_backend/extn/core/exception/struct.ThreadError.html\" title=\"struct artichoke_backend::extn::core::exception::ThreadError\">ThreadError</a>","synthetic":false,"types":["artichoke_backend::extn::core::exception::ThreadError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"artichoke_backend/extn/core/exception/struct.TypeError.html\" title=\"struct artichoke_backend::extn::core::exception::TypeError\">TypeError</a>","synthetic":false,"types":["artichoke_backend::extn::core::exception::TypeError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"artichoke_backend/extn/core/exception/struct.ZeroDivisionError.html\" title=\"struct artichoke_backend::extn::core::exception::ZeroDivisionError\">ZeroDivisionError</a>","synthetic":false,"types":["artichoke_backend::extn::core::exception::ZeroDivisionError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"artichoke_backend/extn/core/exception/struct.SystemExit.html\" title=\"struct artichoke_backend::extn::core::exception::SystemExit\">SystemExit</a>","synthetic":false,"types":["artichoke_backend::extn::core::exception::SystemExit"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"artichoke_backend/extn/core/exception/struct.SystemStackError.html\" title=\"struct artichoke_backend::extn::core::exception::SystemStackError\">SystemStackError</a>","synthetic":false,"types":["artichoke_backend::extn::core::exception::SystemStackError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"artichoke_backend/extn/core/exception/struct.Fatal.html\" title=\"struct artichoke_backend::extn::core::exception::Fatal\">Fatal</a>","synthetic":false,"types":["artichoke_backend::extn::core::exception::Fatal"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"artichoke_backend/extn/core/kernel/integer/enum.Utf8Error.html\" title=\"enum artichoke_backend::extn::core::kernel::integer::Utf8Error\">Utf8Error</a>","synthetic":false,"types":["artichoke_backend::extn::core::kernel::integer::Utf8Error"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"artichoke_backend/extn/core/math/struct.DomainError.html\" title=\"struct artichoke_backend::extn::core::math::DomainError\">DomainError</a>","synthetic":false,"types":["artichoke_backend::extn::core::math::DomainError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"artichoke_backend/extn/core/regexp/enc/struct.InvalidEncodingError.html\" title=\"struct artichoke_backend::extn::core::regexp::enc::InvalidEncodingError\">InvalidEncodingError</a>","synthetic":false,"types":["artichoke_backend::extn::core::regexp::enc::InvalidEncodingError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"artichoke_backend/ffi/struct.InterpreterExtractError.html\" title=\"struct artichoke_backend::ffi::InterpreterExtractError\">InterpreterExtractError</a>","synthetic":false,"types":["artichoke_backend::ffi::InterpreterExtractError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"artichoke_backend/ffi/struct.ConvertBytesError.html\" title=\"struct artichoke_backend::ffi::ConvertBytesError\">ConvertBytesError</a>","synthetic":false,"types":["artichoke_backend::ffi::ConvertBytesError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"artichoke_backend/gc/arena/struct.IndexError.html\" title=\"struct artichoke_backend::gc::arena::IndexError\">IndexError</a>","synthetic":false,"types":["artichoke_backend::gc::arena::IndexError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"artichoke_backend/string/struct.WriteError.html\" title=\"struct artichoke_backend::string::WriteError\">WriteError</a>","synthetic":false,"types":["artichoke_backend::string::WriteError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"artichoke_backend/string/struct.IoWriteError.html\" title=\"struct artichoke_backend::string::IoWriteError\">IoWriteError</a>","synthetic":false,"types":["artichoke_backend::string::IoWriteError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"artichoke_backend/value/struct.ArgCountError.html\" title=\"struct artichoke_backend::value::ArgCountError\">ArgCountError</a>","synthetic":false,"types":["artichoke_backend::value::ArgCountError"]}];
implementors["artichoke_core"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"artichoke_core/parser/enum.IncrementLinenoError.html\" title=\"enum artichoke_core::parser::IncrementLinenoError\">IncrementLinenoError</a>","synthetic":false,"types":["artichoke_core::parser::IncrementLinenoError"]}];
implementors["base64"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"base64/enum.DecodeError.html\" title=\"enum base64::DecodeError\">DecodeError</a>","synthetic":false,"types":["base64::decode::DecodeError"]}];
implementors["bstr"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"bstr/struct.FromUtf8Error.html\" title=\"struct bstr::FromUtf8Error\">FromUtf8Error</a>","synthetic":false,"types":["bstr::ext_vec::FromUtf8Error"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"bstr/struct.Utf8Error.html\" title=\"struct bstr::Utf8Error\">Utf8Error</a>","synthetic":false,"types":["bstr::utf8::Utf8Error"]}];
implementors["chrono"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"chrono/format/struct.ParseError.html\" title=\"struct chrono::format::ParseError\">ParseError</a>","synthetic":false,"types":["chrono::format::ParseError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"chrono/enum.RoundingError.html\" title=\"enum chrono::RoundingError\">RoundingError</a>","synthetic":false,"types":["chrono::round::RoundingError"]}];
implementors["clap"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"clap/struct.Error.html\" title=\"struct clap::Error\">Error</a>","synthetic":false,"types":["clap::errors::Error"]}];
implementors["getrandom"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"getrandom/struct.Error.html\" title=\"struct getrandom::Error\">Error</a>","synthetic":false,"types":["getrandom::error::Error"]}];
implementors["hex"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"hex/enum.FromHexError.html\" title=\"enum hex::FromHexError\">FromHexError</a>","synthetic":false,"types":["hex::error::FromHexError"]}];
implementors["intaglio"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"intaglio/struct.SymbolOverflowError.html\" title=\"struct intaglio::SymbolOverflowError\">SymbolOverflowError</a>","synthetic":false,"types":["intaglio::SymbolOverflowError"]}];
implementors["nix"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"nix/errno/enum.Errno.html\" title=\"enum nix::errno::Errno\">Errno</a>","synthetic":false,"types":["nix::errno::consts::Errno"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"nix/enum.Error.html\" title=\"enum nix::Error\">Error</a>","synthetic":false,"types":["nix::Error"]}];
implementors["onig"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"onig/struct.Error.html\" title=\"struct onig::Error\">Error</a>","synthetic":false,"types":["onig::Error"]}];
implementors["rand"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"rand/distributions/enum.BernoulliError.html\" title=\"enum rand::distributions::BernoulliError\">BernoulliError</a>","synthetic":false,"types":["rand::distributions::bernoulli::BernoulliError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"rand/distributions/weighted/enum.WeightedError.html\" title=\"enum rand::distributions::weighted::WeightedError\">WeightedError</a>","synthetic":false,"types":["rand::distributions::weighted::WeightedError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"rand/rngs/adapter/struct.ReadError.html\" title=\"struct rand::rngs::adapter::ReadError\">ReadError</a>","synthetic":false,"types":["rand::rngs::adapter::read::ReadError"]}];
implementors["rand_core"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"rand_core/struct.Error.html\" title=\"struct rand_core::Error\">Error</a>","synthetic":false,"types":["rand_core::error::Error"]}];
implementors["regex"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"regex/enum.Error.html\" title=\"enum regex::Error\">Error</a>","synthetic":false,"types":["regex::error::Error"]}];
implementors["regex_syntax"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"regex_syntax/ast/struct.Error.html\" title=\"struct regex_syntax::ast::Error\">Error</a>","synthetic":false,"types":["regex_syntax::ast::Error"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"regex_syntax/enum.Error.html\" title=\"enum regex_syntax::Error\">Error</a>","synthetic":false,"types":["regex_syntax::error::Error"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"regex_syntax/hir/struct.Error.html\" title=\"struct regex_syntax::hir::Error\">Error</a>","synthetic":false,"types":["regex_syntax::hir::Error"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"regex_syntax/hir/struct.CaseFoldError.html\" title=\"struct regex_syntax::hir::CaseFoldError\">CaseFoldError</a>","synthetic":false,"types":["regex_syntax::unicode::CaseFoldError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"regex_syntax/struct.UnicodeWordError.html\" title=\"struct regex_syntax::UnicodeWordError\">UnicodeWordError</a>","synthetic":false,"types":["regex_syntax::unicode::UnicodeWordError"]}];
implementors["rustyline"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"rustyline/error/enum.ReadlineError.html\" title=\"enum rustyline::error::ReadlineError\">ReadlineError</a>","synthetic":false,"types":["rustyline::error::ReadlineError"]}];
implementors["syn"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"syn/struct.Error.html\" title=\"struct syn::Error\">Error</a>","synthetic":false,"types":["syn::error::Error"]}];
implementors["termcolor"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"termcolor/struct.ParseColorError.html\" title=\"struct termcolor::ParseColorError\">ParseColorError</a>","synthetic":false,"types":["termcolor::ParseColorError"]}];
implementors["time"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"time/struct.OutOfRangeError.html\" title=\"struct time::OutOfRangeError\">OutOfRangeError</a>","synthetic":false,"types":["time::duration::OutOfRangeError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"time/enum.ParseError.html\" title=\"enum time::ParseError\">ParseError</a>","synthetic":false,"types":["time::ParseError"]}];
implementors["uuid"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"uuid/struct.Error.html\" title=\"struct uuid::Error\">Error</a>","synthetic":false,"types":["uuid::error::Error"]}];
implementors["void"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"void/enum.Void.html\" title=\"enum void::Void\">Void</a>","synthetic":false,"types":["void::Void"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()