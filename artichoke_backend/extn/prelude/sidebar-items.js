initSidebarItems({"enum":[["IncrementLinenoError","Errors encountered when incrementing line numbers on parser state."],["Ruby","Classes of Ruby types."],["Rust","Classes of Rust types."]],"trait":[["BoxUnboxVmValue",""],["Convert","Infallible conversion between two types."],["ConvertMut","Mutable infallible conversion between two types."],["DefineConstant","Deifne constants on an interprter."],["Eval","Execute code and retrieve its result."],["File","Rust extension hook that can be required."],["Globals","Get and set global variables on an interpreter."],["HeapAllocatedData",""],["Intern","Store and retrieve bytestrings that have the same lifetime as the interpreter."],["Io","Make I/O external to the interpreter."],["LoadSources","Load Ruby sources and Rust extensions into an interpreter."],["Parser","Manage parser state, active filename context, and line number metadata."],["Prng","Interpreter global psuedorandom number generator."],["Regexp","Track the state of `Regexp` globals and global interpreter state."],["ReleaseMetadata","Information about an Artichoke build."],["TopSelf","Return a `Value`-wrapped reference to [top self][topself]."],["TryConvert","Fallible conversions between two types."],["TryConvertMut","Mutable fallible conversions between two types."],["Value","A boxed Ruby value owned by the interpreter."],["Warn","Emit warnings during interpreter execution to stderr."],["_","A boxed Ruby value owned by the interpreter."],["_","Track the state of `Regexp` globals and global interpreter state."]],"type":[["InitializeResult","Type alias for errors returned from `init` functions in `extn`."]]});